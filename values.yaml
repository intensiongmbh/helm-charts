# Default values for keycloak.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

image:
  repository: quay.io/keycloak/keycloak
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "22.0.1"
  # Overrides the image tag with a specific digest
  digest: ""

http:
  relativePath: /auth

proxy:
  enabled: false
  mode: ""

database:
  # Use an existing secret for database password. This takes precedence over password.
  existingSecret: ""
  existingSecretKey: ""
  # Can be dev-file, dev-mem, mariadb, mssql, mysql, oracle, postgres
  vendor: ""
  hostname: ""
  port: ""
  database: ""
  username: ""
  password: ""

metrics:
  enabled: true

health:
  enabled: true

statefulSet:
  # Annotations to add to the StatefulSet
  annotations: {}
  # Labels to add to the StatefulSet
  labels: {}

# Annotations to add to the Pod
podAnnotations: {}

# Labels to add to the Pod
podLabels: {}

# Update strategy of the StatefulSet
updateStrategy: RollingUpdate

# Restart policy of the StatefulSet
restartPolicy: Always

# Control how pods are created during initial scale up, replacement or when scaling down. Either "OrderedReady" or "Parallel".
podManagementPolicy: OrderedReady

# Pod wide SecurityContext. Defines security options the container shold be run with.
podSecurityContext:
  fsGroup: 1000

# SecurityContext for the main container.
securityContext:
  runAsUser: 1000
  runAsNonRoot: true

# Override the default entrypoint of the Keycloak container
command: []

# Override the default args for the Keycloak container
args: []

# Extra environment variables for Keycloak
extraEnv: ""

# Get extra environment variables for Keycloak from ConfigMap or Secret
extraEnvFrom: ""

# Specify the node for the pod to be scheduled on.
nodeSelector: {}
affinity: {}
tolerations: []

# If specified, indicates the pod's priority.
priorityClassName: ""

# Termination grace period in seconds for Keycloak shutdown. In clusters with a large cache Infinispan might need time to rebalance
terminationGracePeriodSeconds: 60

# Mapped IPs and hostnames that will be injected into Pod's hosts files
hostAliases: []
# - ip: "10.20.30.40"
#   hostname:
#     - "abc.domain.com"

# Extra ports for the pod
extraPorts: []

# Describe how a group of pods can spread across topology domains.
topologySpreadConstraings: []

enableServiceLinks: true

# Liveness probe configuration
livenessProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health/live'
    port: http
  initialDelaySeconds: 0
  timeoutSeconds: 5

# Readiness probe configuration
readinessProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health/ready'
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 1

# Startup probe configuration
startupProbe: |
  httpGet:
    path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/health'
    port: http
  initialDelaySeconds: 15
  timeoutSeconds: 1
  failureThreshold: 60
  periodSeconds: 5

# Extra volumes, e.g. for additional themes
extraVolumes: ""

# Extra volume mounts, e.g. for additional themes
extraVolumeMounts: ""

rbac:
  enable: true
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list"]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # Labels to add to the service account
  labels: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Automount API token for the service account
  automountServiceAccountToken: true

service:
  # Annotations to add to the http service
  annotations: {}
  headless:
    # Annotations to add to the headless serivce
    annotations: {}
  # Labels to add to the http and the headless services
  labels: {}
  type: ClusterIP
  # Optional IP for service of type loadbalancer
  loadBalancerIP: ""
  # the http Port of the service
  httpPort: 80
  # the https Port of the service
  httpsPort: 443
  # the http Port of the service if its type is NodePort
  httpNodePort: null
  # the https Port of the service if its type is NodePort
  httpsNodePort: null
  # Specify extra ports for the service
  extraPorts: []
  # Restrict source ranges allowed to connect to the loadbalancer
  # if service is of type loadbalancer
  loadBalancerSourceRanges: []
  # If set to "Local", the proxy assumes that external load balancers
  # will take care of balancing the service traffic between nodes and
  # won't masquerade the client source IP.
  # If set to "Cluster" the standard behavior of routing will be used.
  externalTrafficPolicy: "Cluster"
  # Session Affinity
  sessionAffinity: ""
  # Session Affinity Config
  sessionAffinityConfig: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: {}
